{"version":3,"sources":["util/db.js"],"names":["syncPromise","enemies","Enemy","findAll","enemyList","map","enemy","name","value","players","Player","include","model","PlayerEnemy","playerList","score","player","PlayerEnemies","reduce","playerEnemy","enemyChecklist","srlPlayers","getInitialState","sequelize","db","user","password","host","logging","define","STRING","INTEGER","hasMany","belongsTo","sync"],"mappings":";;;;;;;;+BAgCO,aAAwC;AAC7C,UAAMA,WAAN;AACA,UAAMC,UAAU,MAAMC,MAAMC,OAAN,EAAtB;AACA,UAAMC,YAAY,mBAAQH,QAAQI,GAAR,CAAY;AAAA,aAAS,CAC7CC,MAAMC,IADuC,EAE7CD,MAAME,KAFuC,CAAT;AAAA,KAAZ,CAAR,CAAlB;AAIA,UAAMC,UAAU,MAAMC,OAAOP,OAAP,CAAe;AACnCQ,eAAS;AACPC,eAAOC,WADA;AAEPF,iBAAS;AACPC,iBAAOV;AADA;AAFF;AAD0B,KAAf,CAAtB;AAQA,UAAMY,aAAa,mBAAQL,QAAQJ,GAAR,CAAY,kBAAU;AAC/C,YAAMU,QAAQC,OAAOC,aAAP,CAAqBC,MAArB,CACZ,UAACV,KAAD,EAAQW,WAAR;AAAA,eAAwBX,QAAQW,YAAYjB,KAAZ,CAAkBM,KAAlD;AAAA,OADY,EAEZ,CAFY,CAAd;AAIA,aAAO,CACLQ,OAAOT,IADF,EAEL;AACEQ,aADF;AAEEd,iBAAS,mBAAQe,OAAOC,aAAP,CAAqBZ,GAArB,CACf;AAAA,iBAAec,YAAYjB,KAAZ,CAAkBK,IAAjC;AAAA,SADe,CAAR;AAFX,OAFK,CAAP;AASD,KAd0B,CAAR,CAAnB;;AAgBA,WAAO;AACLa,sBAAgB;AACdhB,iBADc;AAEdU,kBAFc;AAGdO,oBAAY;AAHE;AADX,KAAP;AAOD,G;;kBAtCqBC,e;;;;;AAhCtB;;;;AACA;;AAEA;;;;;;;;AAGA,MAAMC,YAAY,wBAChB,iBAAOC,EAAP,CAAUjB,IADM,EAEhB,iBAAOiB,EAAP,CAAUC,IAFM,EAGhB,iBAAOD,EAAP,CAAUE,QAHM,EAIhB;AACEC,QAAM,iBAAOH,EAAP,CAAUG,IADlB;AAEEC,WAAS;AAFX,CAJgB,CAAlB;;AAUO,MAAMlB,0BAASa,UAAUM,MAAV,CAAiB,QAAjB,EAA2B;AAC/CtB,QAAM,oBAAUuB;AAD+B,CAA3B,CAAf;;AAIA,MAAM5B,wBAAQqB,UAAUM,MAAV,CAAiB,OAAjB,EAA0B;AAC7CtB,QAAM,oBAAUuB,MAD6B;AAE7CtB,SAAO,oBAAUuB;AAF4B,CAA1B,CAAd;;AAKA,MAAMlB,oCAAcU,UAAUM,MAAV,CAAiB,aAAjB,CAApB;;AAEPnB,OAAOsB,OAAP,CAAenB,WAAf;AACAA,YAAYoB,SAAZ,CAAsB/B,KAAtB;;AAEA,MAAMF,cAAcuB,UAAUW,IAAV,EAApB","file":"db.js","sourcesContent":["import Sequelize from 'sequelize';\nimport { Map, Set, List } from 'immutable';\n\nimport config from '../../config';\nimport type { State } from '../reducers';\n\nconst sequelize = new Sequelize(\n  config.db.name,\n  config.db.user,\n  config.db.password,\n  {\n    host: config.db.host,\n    logging: false,\n  }\n);\n\nexport const Player = sequelize.define('Player', {\n  name: Sequelize.STRING,\n});\n\nexport const Enemy = sequelize.define('Enemy', {\n  name: Sequelize.STRING,\n  value: Sequelize.INTEGER,\n});\n\nexport const PlayerEnemy = sequelize.define('PlayerEnemy');\n\nPlayer.hasMany(PlayerEnemy);\nPlayerEnemy.belongsTo(Enemy);\n\nconst syncPromise = sequelize.sync();\n\nexport async function getInitialState(): State {\n  await syncPromise;\n  const enemies = await Enemy.findAll();\n  const enemyList = new Map(enemies.map(enemy => [\n    enemy.name,\n    enemy.value\n  ]));\n  const players = await Player.findAll({\n    include: {\n      model: PlayerEnemy,\n      include: {\n        model: Enemy,\n      }\n    }\n  });\n  const playerList = new Map(players.map(player => {\n    const score = player.PlayerEnemies.reduce(\n      (value, playerEnemy) => value + playerEnemy.Enemy.value,\n      0\n    );\n    return [\n      player.name,\n      {\n        score,\n        enemies: new Set(player.PlayerEnemies.map(\n          playerEnemy => playerEnemy.Enemy.name\n        )),\n      },\n    ];\n  }));\n\n  return {\n    enemyChecklist: {\n      enemyList,\n      playerList,\n      srlPlayers: new List(),\n    },\n  };\n}\n"]}