{"version":3,"sources":["util/routes.jsx"],"names":["store","token","request","validate","nextState","replace","code","location","query","document","cookie","post","error","response","body","statusCode","data","JSON","parse","get","url","headers","Authorization","access_token","error2","response2","body2","data2","dispatch","name","logo","redirectNonUser","console","log","getState","players","toJS","has","pathname","childChecklist","playerList","header"],"mappings":"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","file":"routes.js","sourcesContent":["// @flow\n\nimport { Route, IndexRoute } from 'react-router';\nimport React from 'react';\nimport type { Store } from 'redux';\n\nimport App from '../components/App';\nimport TwitchAuthenticate from '../components/TwitchAuthenticate';\nimport Bingo from '../components/Bingo';\n\nimport setToken from '../actions/setToken';\nimport setCode from '../actions/setCode';\nimport setUser from '../actions/setUser';\nimport ChildChecklist from '../components/ChildChecklist';\nimport ChildChecklistHeader from '../components/ChildChecklistHeader';\nimport ChildChecklistList from '../components/ChildChecklistList';\nimport Validate from '../components/Validate';\nimport createNewChildPlayer from '../actions/createNewChildPlayer';\nimport ChildPopout from '../components/ChildPopout';\n// import createNewPlayer from '../actions/createNewPlayer';\n// import createNewKeyPlayer from '../actions/createNewKeyPlayer';\n// import createNewItemPlayer from '../actions/createNewItemPlayer';\n// import ItemChecklistHeader from '../components/ItemChecklistHeader';\n// import ItemChecklist from '../components/ItemChecklist';\n// import ItemChecklistList from '../components/ItemChecklistList';\n// import ItemChecklistIndex from '../components/ItemChecklistIndex';\n// import ItemChecklistLeaderboard from '../components/ItemChecklistLeaderboard';\n// import EnemyChecklistHeader from '../components/EnemyChecklistHeader';\n// import EnemyCounter from '../components/EnemyChecklist';\n// import EnemyCounterChecklist from '../components/EnemyChecklistList';\n// import EnemyCounterIndex from '../components/EnemyCounterIndex';\n// import EnemyChecklistLeaderboard from '../components/EnemyChecklistLeaderboard';\n// import KeyCounter from '../components/KeyCounter';\n// import KeyCounterIndex from '../components/KeyCounterIndex';\n// import KeyCounterContainer from '../components/KeyCounterContainer';\n// import KeyCounterHeader from '../components/KeyCounterHeader';\n// import KeyCounterLeaderboard from '../components/KeyCounterLeaderboard';\n\nexport default function (store: Store, token: ?string, request) {\n  // function onPlayerEnter(nextState) {\n  //   const { name } = nextState.params;\n  //   if (!store.getState().enemyChecklist.playerList.has(name)) {\n  //     store.dispatch(createNewPlayer(name));\n  //   }\n  // }\n  //\n  // function onKeyPlayerEnter(nextState) {\n  //   const { name } = nextState.params;\n  //   if (!store.getState().keyCounter.has(name)) {\n  //     store.dispatch(createNewKeyPlayer(name));\n  //   }\n  // }\n  //\n  // function onItemPlayerEnter(nextState) {\n  //   const { name } = nextState.params;\n  //   if (!store.getState().itemChecklist.playerList.has(name)) {\n  //     store.dispatch(createNewItemPlayer(name));\n  //   }\n  // }\n\n  function validate(nextState, replace) {\n    const { code } = nextState.location.query;\n    if (typeof document !== 'undefined') {\n      document.cookie = `token=${code}`;\n      token = code;\n    } else {\n      request.post(`https://api.twitch.tv/kraken/oauth2/token?client_id=rpj60fikezo717h9d7lka7zq7r1w97&client_secret=j4jbu16f73hkksncxfspvzx6q770dz&grant_type=authorization_code&redirect_uri=http://localhost:3000/redirect&code=${code}`,\n        (error, response, body) => {\n          if (!error && response.statusCode === 200) {\n            const data = JSON.parse(body);\n            request.get({\n              url: 'https://api.twitch.tv/kraken/user',\n              headers: {\n                'Client-ID': 'rpj60fikezo717h9d7lka7zq7r1w97',\n                Authorization: `OAuth ${data.access_token}`,\n              },\n            }, (error2, response2, body2) => {\n              const data2 = JSON.parse(body2);\n              store.dispatch(setUser(data2.name, data2.logo, data.access_token, code));\n            });\n          }\n        }\n      );\n    }\n  }\n\n  function redirectNonUser(nextState, replace) {\n    console.log(store.getState().players.toJS());\n    console.log(token);\n    if (!token || !store.getState().players.has(token)) {\n      replace({\n        pathname: '/auth',\n      });\n    }\n  }\n\n  return (\n    <Route component={App} path=\"/\">\n      <Route component={TwitchAuthenticate} path=\"auth\" />\n      <Route path=\"redirect\" onEnter={validate} component={() => <Validate token={token} />} />\n      <Route component={ChildChecklist} path=\"childrace\" onEnter={redirectNonUser}>\n        <IndexRoute\n          onEnter={() => {\n            if (!store.getState().childChecklist.playerList.has(token)) {\n              store.dispatch(createNewChildPlayer(token));\n            }\n          }}\n          components={{\n            header: () => <ChildChecklistHeader token={token} />,\n            body: () => <ChildChecklistList token={token} />,\n          }}\n        />\n        <Route path=\"popout\" components={{ body: () => <ChildPopout token={token} /> }} />\n      </Route>\n      {/* <Route component={KeyCounterContainer} path=\"key-counter\">\n        <IndexRoute\n          components={{\n            header: () => <div />,\n            body: KeyCounterIndex,\n          }}\n        />\n        <Route\n          path=\"user/:name\"\n          components={{\n            header: KeyCounterHeader,\n            body: KeyCounter,\n          }}\n          onEnter={onKeyPlayerEnter}\n        />\n        <Route\n          path=\"leaderboard\"\n          components={{\n            header: null,\n            body: KeyCounterLeaderboard,\n          }}\n        />\n      </Route>\n\n      <Route component={EnemyCounter} path=\"enemy-counter\">\n        <IndexRoute\n          components={{\n            header: () => <div />,\n            body: EnemyCounterIndex,\n          }}\n        />\n        <Route\n          path=\"user/:name\"\n          components={{\n            header: EnemyChecklistHeader,\n            body: EnemyCounterChecklist,\n          }}\n          onEnter={onPlayerEnter}\n        />\n        <Route\n          path=\"leaderboard\"\n          components={{\n            header: null,\n            body: EnemyChecklistLeaderboard,\n          }}\n        />\n      </Route>\n\n      <Route component={ItemChecklist} path=\"item-counter\">\n        <IndexRoute\n          components={{\n            header: () => <div />,\n            body: ItemChecklistIndex,\n          }}\n        />\n        <Route\n          path=\"user/:name\"\n          components={{\n            header: ItemChecklistHeader,\n            body: ItemChecklistList,\n          }}\n          onEnter={onItemPlayerEnter}\n        />\n        <Route\n          path=\"leaderboard\"\n          components={{\n            header: null,\n            body: ItemChecklistLeaderboard,\n          }}\n        />\n      </Route> */}\n    </Route>\n  );\n}\n"]}