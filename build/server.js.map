{"version":3,"sources":["server.jsx"],"names":["global","navigator","app","server","createServer","io","use","static","join","__dirname","jsFile","process","env","NODE_ENV","files","client","out","outFile","ports","webpack","store","req","res","token","cookies","routes","location","url","error","redirectLocation","renderProps","console","log","redirect","pathname","search","status","send","content","renderToString","JSON","stringify","getState","on","socket","action","broadcast","emit","listen","PORT","express"],"mappings":"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","file":"server.js","sourcesContent":["// @flow\n\n\nimport 'source-map-support/register';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Map } from 'immutable';\nimport { match, RouterContext } from 'react-router';\nimport { Provider } from 'react-redux';\nimport express from 'express';\nimport socketio from 'socket.io';\nimport path from 'path';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport http from 'http';\nimport request from 'request';\nimport cookieParser from 'cookie-parser';\n\nimport { socketMiddleware, connectStoreWithSocket } from './util/storeSockets';\nimport config from '../config';\nimport reducers from './reducers';\nimport routes from './util/routes';\n// import { getInitialState } from './util/db';\n// import dbMiddleware from './util/dbMiddleware';\nimport srl from './util/SRL';\n\nglobal.navigator = { navigator: 'all' };\n\nconst app = express();\nconst server = http.createServer(app);\nconst io = socketio(server);\n\napp.use('/assets/', express.static(path.join(__dirname, '../build/static')));\napp.use('/images/', express.static(path.join(__dirname, '../assets/images')));\napp.use('/fonts/', express.static(path.join(__dirname, '../assets/fonts')));\napp.use(cookieParser());\n\nlet jsFile;\nif (process.env.NODE_ENV === 'production') {\n  jsFile = `/assets/${config.files.client.out}/${config.files.client.outFile}`;\n} else {\n  jsFile = `http://localhost:${config.ports.webpack}/${config.files.client.out}/${config.files.client.outFile}`;\n}\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(socketMiddleware(io)), //, dbMiddleware)\n);\n\nsrl(store);\n\napp.use((req, res) => {\n  const token = req.cookies.token;\n\n  match(\n    { routes: routes(store, token, request), location: req.url },\n    (error, redirectLocation, renderProps) => {\n      if (redirectLocation) {\n        console.log('redirect')\n        res.redirect(302, redirectLocation.pathname + redirectLocation.search);\n      } else if (error) {\n        console.log(error);\n        res.status(500).send('An internal error has occurred');\n      } else if (!renderProps) {\n        res.status(404).send('Not Found');\n      } else {\n        const content = ReactDOMServer.renderToString(\n          <Provider store={store}>\n            <RouterContext {...renderProps} />\n          </Provider>\n        );\n        res.send(\n          `<html>\n            <head>\n              <link rel=\"stylesheet\" href=\"/assets/css/main.css\" />\n            </head>\n            <body>\n              <div id=\"react-root\">${content}</div>\n              <script>window.PRELOADED_STATE=${JSON.stringify(store.getState())};</script>\n              <script async defer src=\"${jsFile}\"></script>\n            </body>\n          </html>`\n        );\n      }\n    }\n  );\n});\n\nio.on('connection', socket => {\n  connectStoreWithSocket(store, socket);\n  socket.on('action', action => {\n    socket.broadcast.emit('action', action);\n  });\n});\n\nserver.listen(process.env.PORT || config.ports.express, () => {\n  console.log(`Listening on port ${config.ports.express}`);\n});\n"]}