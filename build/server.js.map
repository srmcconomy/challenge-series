{"version":3,"sources":["server.jsx"],"names":["global","navigator","app","use","static","join","__dirname","jsFile","process","env","NODE_ENV","files","client","out","outFile","ports","webpack","store","req","res","routes","location","url","error","redirectLocation","renderProps","redirect","pathname","search","console","log","status","send","content","renderToString","listen","express"],"mappings":";;AAEA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,SAAP,GAAmB,EAAEA,WAAW,KAAb,EAAnB;;AAEA,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,UAAR,EAAoB,kBAAQC,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CAAf,CAApB;;AAEA,IAAIC,MAAJ;AACA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,WAAU,YAAU,iBAAOI,KAAP,CAAaC,MAAb,CAAoBC,GAAI,MAAG,iBAAOF,KAAP,CAAaC,MAAb,CAAoBE,OAAQ,GAA3E;AACD,CAFD,MAEO;AACLP,WAAU,qBAAmB,iBAAOQ,KAAP,CAAaC,OAAQ,MAAG,iBAAOL,KAAP,CAAaC,MAAb,CAAoBC,GAAI,MAAG,iBAAOF,KAAP,CAAaC,MAAb,CAAoBE,OAAQ,GAA5G;AACD;;AAED,MAAMG,QAAQ,4CAAsB,sCAAtB,CAAd;;AAGAf,IAAIC,GAAJ,CAAQ,CAACe,GAAD,EAAMC,GAAN,KAAc;AACpB,0BACE,EAAEC,wBAAF,EAAUC,UAAUH,IAAII,GAAxB,EADF,EAEE,CAACC,KAAD,EAAQC,gBAAR,EAA0BC,WAA1B,KAA0C;AACxC,QAAID,gBAAJ,EAAsB;AACpBL,UAAIO,QAAJ,CAAa,GAAb,EAAkBF,iBAAiBG,QAAjB,GAA4BH,iBAAiBI,MAA/D;AACD,KAFD,MAEO,IAAIL,KAAJ,EAAW;AAChBM,cAAQC,GAAR,CAAYP,KAAZ;AACAJ,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gCAArB;AACD,KAHM,MAGA,IAAI,CAACP,WAAL,EAAkB;AACvBN,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,WAArB;AACD,KAFM,MAEA;AACL,YAAMC,UAAU,iBAAeC,cAAf,CACd;AAAA;AAAA,UAAU,OAAOjB,KAAjB;AACE,kEAAmBQ,WAAnB;AADF,OADc,CAAhB;AAKAN,UAAIa,IAAJ,CACG;;;;;qCAAA,CAK0BC,OAAQ;;yCAAA,CAEJ1B,MAAO;;kBARxC;AAYD;AACF,GA7BH;AA+BD,CAhCD;;AAkCAL,IAAIiC,MAAJ,CAAW,iBAAOpB,KAAP,CAAaqB,OAAxB,EAAiC,MAAM;AACrCP,UAAQC,GAAR,CAAa,sBAAoB,iBAAOf,KAAP,CAAaqB,OAAQ,GAAtD;AACD,CAFD","file":"server.js","sourcesContent":["// @flow\n\nimport { match, RouterContext } from 'react-router';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport express from 'express';\nimport path from 'path';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport { socketMiddleware } from './util/serverSockets';\nimport config from '../config';\nimport routes from './util/routes';\nimport reducers from './reducers';\n\nglobal.navigator = { navigator: 'all' };\n\nconst app = express();\napp.use('/assets/', express.static(path.join(__dirname, '../build/static')));\n\nlet jsFile;\nif (process.env.NODE_ENV === 'production') {\n  jsFile = `/assets/${config.files.client.out}/${config.files.client.outFile}`;\n} else {\n  jsFile = `http://localhost:${config.ports.webpack}/${config.files.client.out}/${config.files.client.outFile}`;\n}\n\nconst store = createStore(reducers, socketMiddleware());\n\n\napp.use((req, res) => {\n  match(\n    { routes, location: req.url },\n    (error, redirectLocation, renderProps) => {\n      if (redirectLocation) {\n        res.redirect(301, redirectLocation.pathname + redirectLocation.search);\n      } else if (error) {\n        console.log(error);\n        res.status(500).send('An internal error has occurred');\n      } else if (!renderProps) {\n        res.status(404).send('Not Found');\n      } else {\n        const content = ReactDOMServer.renderToString(\n          <Provider store={store}>\n            <RouterContext {...renderProps} />\n          </Provider>\n        );\n        res.send(\n          `<html>\n            <head>\n              <link rel=\"stylesheet\" href=\"/assets/css/main.css\" />\n            </head>\n            <body>\n              <div id=\"react-root\">${content}</div>\n              <script>window.DEFAULT_STATE =\n              <script async defer src=\"${jsFile}\"></script>\n            </body>\n          </html>`\n        );\n      }\n    }\n  );\n});\n\napp.listen(config.ports.express, () => {\n  console.log(`Listening on port ${config.ports.express}`);\n});\n"],"sourceRoot":"/source/"}